
set(SRCROOT ${PROJECT_SOURCE_DIR}/tools/ImageEvolver)

# all source files
set(ImageEvolver_SRC ${SRCROOT}/ImageEvolver.cpp)

# define the ImageEvolver target
add_executable(ImageEvolver ${ImageEvolver_SRC})

if(SFML_FOUND)
	target_include_directories(ImageEvolver PRIVATE ${SFML_INCLUDE_DIR})
	target_link_libraries(ImageEvolver PRIVATE ${SFML_LIBRARIES})
endif()

if(JsonBox_FOUND)
	target_include_directories(ImageEvolver PRIVATE ${JsonBox_INCLUDE_DIR})
	target_link_libraries(ImageEvolver PRIVATE ${JsonBox_LIBRARIES})
endif()

target_link_libraries(ImageEvolver PRIVATE EvoAI)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    message(STATUS "ImageEvolver - Compiler gcc")
    target_compile_options(ImageEvolver PRIVATE -std=c++17 -Wall -Wextra -Wshadow)
    target_link_options(ImageEvolver PRIVATE -mwindows)
    if(EvoAI_BUILD_STATIC)
        target_link_options(ImageEvolver PRIVATE -static -static-libgcc -static-libstdc++)
    endif()
    if(CMAKE_BUILD_TYPE STREQUAL "Release")
        target_compile_options(ImageEvolver PRIVATE -O3 -fexpensive-optimizations -DNDEBUG)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
        target_compile_options(ImageEvolver PRIVATE -g)
    endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    message(STATUS "ImageEvolver - Compiler clang")
    target_compile_options(ImageEvolver PRIVATE -std=c++17 -Wall -Wextra -Wshadow)
    target_link_options(ImageEvolver PRIVATE -mwindows)
    if(EvoAI_BUILD_STATIC)
        target_link_options(ImageEvolver PRIVATE -static -static-libgcc -static-libstdc++)
    endif()
    if(CMAKE_BUILD_TYPE STREQUAL "Release")
        target_compile_options(ImageEvolver PRIVATE -O3 -DNDEBUG)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
        target_compile_options(ImageEvolver PRIVATE -g)
    endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    message(STATUS "ImageEvolver - Compiler MSVC")
    target_compile_options(ImageEvolver PRIVATE /std:c++17 /W4)
    set_target_properties(ImageEvolver PROPERTIES WIN32_EXECUTABLE TRUE)
    if(CMAKE_BUILD_TYPE STREQUAL "Release")
        target_compile_options(ImageEvolver PRIVATE /O3 /DNDEBUG)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
        target_compile_options(ImageEvolver PRIVATE /g)
    endif()
else()
    message(WARNING "ImageEvolver - Compiler not supported.")
endif()

include(GNUInstallDirs)
install(TARGETS ImageEvolver RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
